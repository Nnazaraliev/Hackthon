#!/usr/bin/env python
# coding: utf-8

# In[ ]:


LOGIN = "mylogin@tcsbank.ru" # введи логин
Z_ENV_ = "" # пароль от УЗ для доступа к прокси OpenAI


# In[109]:


import requests
import json
import pandas as pd
import numpy as np


# In[110]:


import telebot
from telebot import types
import random
from random import choice


# In[111]:


TG_TOKEN = '6658827971:AAHF-6YIs5xut9A4qolrkBegSAvlPadBEN4'


# In[112]:


spacefacts = ['Солнце в 300 000 раз больше, чем наша планета Земля', 'Солнце полностью проворачивается вокруг своей оси за 25-35 дней', 'Земля, Марс, Меркурий и Венера также называются «внутренними планетами», так как расположены ближе всего к Солнцу',
'Солнце теряет до 1 000 000 тонн своей массы каждую секунду из-за солнечного ветра', 'Меркурий и Венера уникальны тем, что у них отсутствуют какие-либо спутники', 'На Меркурии нет атмосферы, а значит ветра или какой-либо другой погоды',
'Вeнeрa являeтся eдинствeннoй плaнeтoй, кoтoрaя врaщaeтся в прoтивoпoлoжнyю стoрoнy oтнoситeльнo дрyгих плaнeт Сoлнeчнoй систeмы', 'Ио, спутник Юпитера - самое вулканическое место в солнечной системе',
'С тoчки зрeния Тeoрии oтнoситeльнoсти, пoмимo чёрных дыр, дoлжны сyщeствoвaть и бeлыe дыры, хoтя мы eщё нe oбнaрyжили ни oднoй (сyщeствoвaниe чёрных дыр тaкжe пoдвeргaeтся сoмнeнию)',
'Учениые считают, что создать кротовую нору из "Интерстеллара" возможно', 'Аккреционный диск у черной дыры на самом деле синего цвета', 'Планета, у которой больше всего спутников, это Юпитер с 67 спутниками',
'Так как Сатурн обладает низкой плотностью, то если вы его положите в воду, то он поплывёт!', 'Энцeлaд — этo oдин из сaмых мaлeньких спyтникoв Сaтyрнa. Этoт спyтник oтрaжaeт дo 90% сoлнeчнoгo свeтa, чтo прeвoсхoдит дaжe прoцeнт oтрaжeния свeтa oт снeгa!',
'Уран имеет уникальный наклон, из-за которого одна ночь на нём длится, только представьте, 21 год!', 'Плутон (по англ. Pluto) назван в честь римского бога, а не в честь собаки из Диснея, как полагают некоторые',
'Сейчас в Солнечной системе насчитывается 5 карликовых планет: Церера, Плутон, Хаумеа, Эрида и Макемаке', 'Сoвeтский и рoссийский кoсмoнaвт Сeргeй Кoнстaнтинoвич Крикaлёв являeтся рeкoрдсмeнoм пo врeмeни нaхoждeния в кoсмoсe. Eгo рeкoрд дoстигaeт 803 днeй, 9 чaсoв и 39 минyт, чтo эквивaлeнтнo 2.2 лeт!',
'Тoлькo 24 чeлoвeкa видeли нaшy плaнeтy из кoсмoсa. Нo блaгoдaря прoeктy Google Earth, oстaльныe люди бoлee 500 миллиoнoв рaз скaчaли вид Зeмли из кoсмoсa',
'Световой год — это дистанция, которую свет проходит за один год. Это расстояние равно 95 триллионам километров!', 'Если уменьшить Солнце до размеров бактерии, то галактика Млечный Путь будет размер с США',
'В северной части неба вы можете увидеть две галактики — это галактика Андромеды (М31) и галактика Треугольника (М33)', 'Прямо сейчас к нам приближается галактика Андромеда',
'Сaмaя дaлёкaя гaлaктикa, кoтoрyю нaм yдaлoсь oбнaрyжить, нaзывaeтся GRB 090423, кoтoрaя нaхoдится нa рaсстoянии 13.6 миллиaрдoв свeтoвых лeт! Этo oзнaчaeт, чтo свeт,исхoдящий oт нeё, нaчaл свoё пyтeшeствиe всeгo лишь спyстя 600 000 лeт пoслe oбрaзoвaния Всeлeннoй!',
'В кoсмoсe нaсчитывaeтся пoрядкa 2**1023 звёзд. Гoвoря пo-рyсски, этo числo рaвнo 200 000 000 000 000 000 000 000 000 000!', 'Звёзды типа «красный карлик» имеют самую маленькую массу и могут непрерывно сгорать в течение 10 триллионов лет',
'День на Плутоне длится 6 дней и 9 часов', 'В 1895 году Константин Циолковский, один из первых российских ученых-ракетчиков, первым предложил концепцию космических лифтов, типа космической транспортной системы', 'Если звезда пройдет слишком близко к черной дыре, она может быть разорвана на части',
'Галактика Whirlpool (M51) была первым небесным объектом, идентифицированным как спиральный', 'Галактика Млечный Путь имеет ширину 105 700 световых лет', 'Следы, оставленные на Луне, не исчезнут, пока нет ветра',
'Если на Земле вы весите 60кг, то на Марсе вы будете весить 28кг!', 'Закат на Марсе синего цвета', 'Земля-единственная планета, не названная в честь Бога', 'На самом деле никто не знает почему Землю назвали именно так',
'В космосе звезд больше, чем песчинок в мире', 'Всего в 4 световых годах от нас есть планета, на которой может быть жизнь', 'Только 5% Вселенной видно с Земли', 'В любой момент на Земле происходит не менее 2000 гроз', 'Мы знаем больше о Марсе и нашей Луне, чем о наших океанах',
'Mariner 10 был первым космическим кораблем, который посетил Меркурий в 1974 году', 'Астронавты могут вырасти примерно на два дюйма (5 см) в высоту, когда находятся в космосе', 'Пояс Койпера-это область Солнечной системы за орбитой Нептуна',
'Экзопланеты-это планеты, которые вращаются вокруг других звезд', 'Центр Млечного Пути пахнет ромом и на вкус как малина', 'Наша Луна удаляется от Земли со скоростью 4 см в год!', 'МКС видна более чем 90% населения Земли', 
'Слово “астронавт” означает “звездный моряк” в своем происхождении', 'Красное пятно Юпитера уменьшается', 'Юпитер "защищает" Землю от астероидов, притягивая своей гравитацией большинство астероидов', 'День на Меркурии эквивалентен 58 земным дням',
'Шариковые ручки не работают в космосе, поэтому космонавтам выдают карандаши', 'Уже в 240 году до нашей эры китайцы начали документировать появление кометы Галлея', 'Существует планета, полностью состоящая из алмазов', 'Масса Солнца составляет 99.86% от массы всей Солнечной системы, оставшиеся 0.14% приходятся на планеты и астероиды',
'Большинство тяжелых элементов, содержащихся в вашем организме (таких как кальций, железо и углерод), являются побочными продуктами взрыва группы сверхновых звезд, положившего начало формированию Солнечной системы', 'Официальная научная теория гласит, что человек сможет выжить в открытом космосе без скафандра в течение 90 секунд, если немедленно выдохнет весь воздух из легких',
'Главный претендент на звание обитаемой планеты внесолнечной системы, «Супер-Земля» GJ 667Cc, находится на расстоянии всего 22 световых лет от Земли. Однако путешествие до нее займет у нас 13 878 738 000 лет', '«Космическая юла» под названием нейтронная звезда – это самый быстро крутящийся объект во Вселенной, который делает вокруг своей оси до 500 оборотов в секунду. Помимо этого эти космические тела настолько плотные, что одна столовая ложка составляющего их вещества будет весить ~10 млрд. тонн',
'1 плутонианский год длится 248 земных лет. Это означает, что в то время как Плутон делает всего один полный оборот вокруг Солнца, Земля успевает сделать 248', 'Магнитное поле Юпитера настолько мощное, что ежедневно обогащает магнитное поле нашей планеты миллиардами Ватт', 
'Нашей Солнечной системе требуется 230 миллионов лет, чтобы сделать оборот вокруг Млечного Пути', 'Больше чем на 90% вселенная состоит из темной материи', 'На Юпитере и Сатурне идет алмазный дождь',
'Одна из лун Сатурна имеет форму пельменя, потому что она поглощает некоторые из колец Сатурна', 'Самый большой астероид в Солнечной системе имеет диаметр 525 километров', 'На Земле деревьев больше, чем звезд в Млечном Пути',
'Следы лунной посадки, вероятно, все еще будут видны через миллионы лет']


# In[113]:


ecosys = {
    'Мобильная связь': {
        'Тарифы',
        'Пластиковая симка',
        'Электронная симка',
        'Красивые номера',
        'Услуги',
        'Перенос номера',
        'Роуминг'
    },
    'Страхование': {
        'ОСАГО',
        'Каско',
        'Путешествия',
        'Ипотека',
        'Квартира',
        'Здоровье',
        'Помощь на дорогах',
    },
    "Путешествия": {
        "Авиабилеты": {},
        "Отели": {},
        "Туры": {},
        "Ж/д билеты": {}
    },
    "Город": {
        "Доставка продуктов": {
            "Лента": {
                'Описание': 'большой ассортимент по низкой цене',
                'Заказать продукты': 'https://www.tinkoff.ru/gorod/grocery/lenta/'
            },
            "Вкусвилл": {
                'Описание': 'фермерские продукты с бесплатной доставкой',
                'Заказать продукты': 'https://www.tinkoff.ru/gorod/grocery/vkusvill/'
            },
            "Пятёрочка": {
                'Описание': 'быстро доставят, у них самые низкие цены',
                'Заказать продукты': 'https://www.tinkoff.ru/gorod/grocery/5ka/'
            },
            "Перекрёсток": {
                'Описание': 'самый большой ассортимент премиальных продуктов',
                'Заказать продукты': 'https://www.tinkoff.ru/gorod/grocery/perekrestok/'
            },
            "Сериал про покупку продуктов":  'https://youtu.be/IYwvMJ5gUew?si=phrFcBnWUzmBOBTU'
        },
        "Рестораны": {
            "МА Ми": {
                "Кухня": "вьетнамская",
                "Средний чек": 500,
                "Заказ в Тинькофф Рестораны": "https://mami.moscow/"
            },
            "Брикет Маркет": {
                "Кухня": "гастромаркет",
                "Средний чек": 700,
                "Заказ в Тинькофф Рестораны": "https://briketmarket.com/"
            },
            "Скворец": {
                "Кухня": "европейская, домашняя",
                "Средний чек": 1000,
                "Заказ в Тинькофф Рестораны": "https://t.me/skvorets_diner"
            },
            "Yumbaker Gardens": {
                "Кухня": "европейская, авторская",
                "Средний чек": 1500,
                "Заказ в Тинькофф Рестораны": "https://now.yumbaker.ru/"
            },
            "Lila pastry": {
                "Кухня": "французская, авторская",
                "Средний чек": 2500,
                "Заказ в Тинькофф Рестораны": "http://gt.life/"
            },
            "Ла Мортацца": {
                "Кухня": "итальянская",
                "Средний чек": 1000,
                "Заказ в Тинькофф Рестораны": "https://lamortazza.ru/"
            },
            "Ribambelle": {
                "Кухня": "европейская",
                "Средний чек": 1500,
                "Заказ в Тинькофф Рестораны": "https://ribambelle.ru/"
            },
            "Ku: Рамен Изакая бар": {
                "Кухня": "японская",
                "Средний чек": 800,
                "Заказ в Тинькофф Рестораны": "https://kuramen.ru/"
            },
            "Fruits and Veges": {
                "Кухня": "веганская",
                "Средний чек": 750,
                "Заказ в Тинькофф Рестораны": "https://wa.me/rest"
            }
        },
        "Театры": {
            "Ничего не бойся, я с тобой": {
                "Жанр": "Мюзикл",
                "Цена": 1800,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/nichego-ne-boysya-ya-s-toboy-260708/#rcmrclid=ad76198481b70096"
            },
            "Там же, тогда же": {
                "Жанр": "Драматический",
                "Цена": 3500,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/tam-zhe-togda-zhe-204163/#rcmrclid=045746478e8df762"
            },
            "Ladies' Night. Только для женщин": {
                "Жанр": "Комедия",
                "Цена": 1000,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/ladies-night-tolko-dlya-zhenshchin-203995/"
            },
            "Легенда": {
                "Жанр": "Детский",
                "Цена": 1500,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/legenda-277383/"
            },
            "Алиса в Стране чудес": {
                "Цена": 1000,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/alisa-v-strane-chudes-233624/"
            },
            "Арбенин. Маскарад без слов": {
                "Цена": 500,
                "Заказ в Тинькофф Театры": "https://www.afisha.ru/performance/arbenin-maskarad-bez-slov-247833/"
            }
        },
        "Кино": {
            "Летучий корабль": {
                "Жанр": "Приключение",
                "Цена": 350,
                "Заказ в Тинькофф Кино": "https://www.afisha.ru/movie/letuchiy-korabl-295154/#rcmrclid=07670e42ca8943ea"
            },
            "Онегин": {
                "Жанр": "Мелодрама",
                "Цена": 400,
                "Заказ в Тинькофф Кино": "https://www.afisha.ru/movie/onegin-273606/#rcmrclid=1e6522b12821eb06"
            },
            "Домовой": {
                "Жанр": "Фантастика",
                "Цена": 450,
                "Заказ в Тинькофф Кино": "https://www.afisha.ru/movie/domovoy-273450/"
            },
            "Принцесса Мононоке": {
                "Жанр": "Мультфильм",
                "Цена": 200,
                "Заказ в Тинькофф Кино": "https://www.afisha.ru/movie/princessa-mononoke-175565/"
            },
            "Артур, ты король": {
                "Жанр": "Приключение",
                "Цена": 400,
                "Заказ в Тинькофф Кино": "https://www.afisha.ru/movie/artur-ty-korol-263967/"
            }
        }
    }
}


# In[114]:


promt_goal = f'Ты — чат-помощник крупной компании. К тебе обращается клиент компании, который уже пользуется её продуктами. Ты можешь спрашивать его о интересах и предпочтениях, чтобы предложить подходящий досуг. Список продуктов в словаре: {ecosys}. Подбери для собеседника досуг из списка продуктов компании (предлагай не более 3 вариантов), ссылки оформляй как markdown-ссылки (по шаблону: "[текст](ссылка)"). Тебе запрещено использовать чувствительные темы в ответах: секс, политика, оскорбления, религия, национальности.'


# In[115]:


data ={
  "username": LOGIN,
  "password": Z_ENV_
}
  
response = requests.post('https://openai-proxy.tcsbank.ru/auth/v1/token', json = data)
  
access_token = response.json()['access_token']


# In[ ]:


bot = telebot.TeleBot(TG_TOKEN)


@bot.message_handler(commands=['start']) #стартовая команда
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("Не знаю, чего хочу")
    btn2 = types.KeyboardButton('Посмотреть сегодняшнее меню')
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "Чем я могу помочь сегодня?", reply_markup=markup)

@bot.message_handler(content_types=['text'])
def get_text_messages(message):

# РАЗДЕЛЫ
    
    if message.text == 'Посмотреть сегодняшнее меню':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🚀 Секретная тема дня')
        btn2 = types.KeyboardButton('🎮 Сыграем?')
        btn3 = types.KeyboardButton('👀 Ты этого точно не знал!')
        btn4 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.from_user.id, "Так-с, сейчас посмотрим...", reply_markup=markup)
        bot.send_message(message.from_user.id, '👀 Что вам интересно?')

    elif message.text == '🔙 В начало':
        start(message)
    
    elif message.text == '👀 Ты этого точно не знал!':
        bot.send_message(message.from_user.id, random.choice(spacefacts))

    elif message.text == '🚀 Секретная тема дня':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('📚 История')
        btn2 = types.KeyboardButton('💻 Техника')
        btn3 = types.KeyboardButton('🚀 Космодромы')
        btn4 = types.KeyboardButton('👨‍🚀 Космонавты')
        btn5 = types.KeyboardButton('👍🏻 Следуй за космонавтом')
        btn6 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.from_user.id, 'Тема дня — космос 🪐\n⬇ Выберите подраздел', reply_markup=markup)

    elif message.text == '📚 История':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'Твой раздел: 📚 История\n \n👍🏻 Хороший выбор\n \n📲 Перейти к разделу можно по' + ' [ссылке](https://space4kids.ru/140/)', reply_markup=markup, parse_mode='Markdown')

    elif message.text == '💻 Техника':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'Твой раздел: 💻 Техника\n \n👍🏻 Хороший выбор\n \n📲 Перейти к разделу можно по' + ' [ссылке](https://space4kids.ru/138/)', reply_markup=markup, parse_mode='Markdown')

    elif message.text == '🚀 Космодромы':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'Твой раздел: 🚀 Космодромы\n \n👍🏻 Хороший выбор\n \n📲 Перейти к разделу можно по' + ' [ссылке](https://space4kids.ru/139/)', reply_markup=markup, parse_mode='Markdown')

    elif message.text == '👨‍🚀 Космонавты':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'Твой раздел: 👨‍🚀 Космонавты\n \n👍🏻 Хороший выбор\n \n📲 Перейти к разделу можно по' + ' [ссылке](https://space4kids.ru/40/)', reply_markup=markup, parse_mode='Markdown')

    elif message.text == '👍🏻 Следуй за космонавтом':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        bot.send_message(message.from_user.id, 'Твой раздел: 👍🏻 Следуй за космонавтом\n \n👍🏻 Хороший выбор\n \n📲 Перейти к разделу можно по' + ' [ссылке](https://space4kids.ru/131/)', reply_markup=markup, parse_mode='Markdown')

        
    elif message.text == '🔙 В начало':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("Не знаю, чего хочу")
        btn2 = types.KeyboardButton('Посмотреть сегодняшнее меню')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, "👀 Выбери интересующий раздел", reply_markup=markup)

# ChatPGT

    else:
        user_message = message.text
        messages = [
                {'role': 'system', 'content': promt_goal}
            ]

        messages.append({'role': 'user', 'content': user_message})

        data = {
            'model': 'gpt-4', #'gpt-3.5-turbo',
            'messages': messages
        }
        url = 'https://openai-proxy.tcsbank.ru/public/v1/chat/completions'
        headers = {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + access_token}

        response = requests.post(url, headers=headers, json=data)
        result = response.json()
        content = result['choices'][0]['message']['content']
        
        # кнопка возврата
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('🔙 В начало')
        markup.add(btn1)
        
        bot.send_message(message.from_user.id, content, parse_mode='Markdown') #, reply_markup=markup, 
        print("\nБот:", content)
        messages.append({'role': 'assistant', 'content': content})


bot.polling(none_stop=True, interval=0)

